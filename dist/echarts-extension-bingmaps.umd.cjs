/** 
 * echarts-extension-bingmaps 
 * @version 1.0.1
 * @author andybuibui
 * 
 * MIT License
 * 
 * Copyright (c) 2019-2024 andybuibui
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */(function(l,c){typeof exports=="object"&&typeof module<"u"?c(exports,require("echarts")):typeof define=="function"&&define.amd?define(["exports","echarts"],c):(l=typeof globalThis<"u"?globalThis:l||self,c(l["echarts-extension-bingmaps"]={},l.echarts))})(this,function(l,c){"use strict";function _(t){const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t){for(const e in t)if(e!=="default"){const i=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,i.get?i:{enumerable:!0,get:()=>t[e]})}}return n.default=t,Object.freeze(n)}const g=_(c);function O(t,n){return t&&n&&t[0]===n[0]&&t[1]===n[1]}g.extendComponentModel({type:"bingmap",setBingMap:function(t){this.__bingmap=t},getBingMap:function(){return this.__bingmap},setEChartsLayer:function(t){this.__echartsLayer=t},getEChartsLayer:function(){return this.__echartsLayer},setCenterAndZoom:function(t,n){this.option.viewOption.center=t,this.option.viewOption.zoom=n},centerOrZoomChanged:function(t,n){let e=this.option.viewOption;return!(O(t,e.center)&&n===e.zoom)},defaultOption:{viewOption:{center:[113.493471,23.169598],zoom:5},mapOption:{customMapStyle:{}}}}),g.extendComponentView({type:"bingmap",render:function(t,n,e){let i=!0,o=t.getBingMap(),f=e.getZr().painter.getViewportRoot(),s=t.coordinateSystem,u=function(h){if(i)return;let a=f.parentNode.parentNode.parentNode,m=[-parseInt(a.style.left,10)||0,-parseInt(a.style.top,10)||0];f.style.left=m[0]+"px",f.style.top=m[1]+"px",s.setMapOffset(m),t.__mapOffset=m,e.dispatchAction({type:"bingmapRoam"})};Microsoft.Maps.Events.removeHandler(this._oldViewChangeHandler),this._oldViewChangeHandler=Microsoft.Maps.Events.addHandler(o,"viewchangeend",u),Microsoft.Maps.Events.removeHandler(this._oldmapresize),this._oldmapresize=Microsoft.Maps.Events.addHandler(o,"mapresize",u),i=!1}});function r(t,n){this._bingmap=t,this.dimensions=["lng","lat"],this._mapOffset=[0,0],this._api=n}r.prototype.dimensions=["lng","lat"],r.prototype.setZoom=function(t){this._zoom=t},r.prototype.setCenter=function(t){this._center=this._bingmap.tryLocationToPixel(new Microsoft.Maps.Location(t[1],t[0]))},r.prototype.setMapOffset=function(t){this._mapOffset=t},r.prototype.getBingMap=function(){return this._bingmap},r.prototype.dataToPoint=function(t){let n=new Microsoft.Maps.Location(t[1],t[0]),e=this._bingmap.tryLocationToPixel(n,Microsoft.Maps.PixelReference.control),i=this._mapOffset;return[e.x-i[0],e.y-i[1]]},r.prototype.pointToData=function(t){let n=this._mapOffset;const e=this._bingmap.tryPixelToLocation({x:t[0]+n[0],y:t[1]+n[1]},Microsoft.Maps.PixelReference.control);return[e.longitude,e.latitude]},r.prototype.getViewRect=function(){let t=this._api;return new c.graphic.BoundingRect(0,0,t.getWidth(),t.getHeight())},r.prototype.getRoamTransform=function(){return c.matrix.create()},r.prototype.prepareCustoms=function(){let t=this.getViewRect();return{coordSys:{type:"bingmap",x:t.x,y:t.y,width:t.width,height:t.height},api:{coord:c.util.bind(this.dataToPoint,this),size:c.util.bind(w,this)}}};function w(t,n){return n=n||[0,0],c.util.map([0,1],function(e){let i=n[e],o=t[e]/2,f=[],s=[];return f[e]=i-o,s[e]=i+o,f[1-e]=s[1-e]=n[1-e],Math.abs(this.dataToPoint(f)[e]-this.dataToPoint(s)[e])},this)}r.dimensions=r.prototype.dimensions,r.create=function(t,n){let e,i=n.getDom();t.eachComponent("bingmap",function(o){let f=n.getZr().painter,s=f.getViewportRoot();if(typeof Microsoft>"u"||typeof Microsoft.Maps>"u"||typeof Microsoft.Maps.Map>"u")throw new Error("It seems that Bing Map API has not been loaded completely yet.");if(e)throw new Error("Only one bingmap component can exist");if(!o.__bingmap){let p=i.querySelector(".ec-extension-bing-map");s.className="ms-composite",s.style.visibility="hidden",p&&(s.style.left="0px",s.style.top="0px",s.style.width="100%",s.style.height="100%",s.style.position="absolute",i.removeChild(p)),p=document.createElement("div"),p.style.cssText="position:absolute;top:0;left:0;right:0;bottom:0;",p.className="ec-extension-bing-map",i.appendChild(p);const d=o.__bingmap=new Microsoft.Maps.Map(p);let b=o.get("mapOption")||{};d.setOptions(b),p.querySelector(".MicrosoftMap").appendChild(s),s.style.visibility="",f.getViewportRootOffset=function(){return{offsetLeft:0,offsetTop:0}}}const u=o.__bingmap;let h=o.get("viewOption"),{center:a,zoom:m}=h,y=[a.lng!==void 0?a.lng:a[0],a.lat!==void 0?a.lat:a[1]];if(a&&m){let p=u.getCenter(),d=u.getZoom();if(o.centerOrZoomChanged([p.longitude,p.latitude],d)){let v=new Microsoft.Maps.Location(y[1],y[0]);u.setView({center:v,zoom:m})}}e=new r(u,n),e.setMapOffset(o.__mapOffset||[0,0]),e.setZoom(m),e.setCenter(a),o.coordinateSystem=e}),t.eachSeries(function(o){o.get("coordinateSystem")==="bingmap"&&(o.coordinateSystem=e)})};const M="echarts-extension-bingmaps",C="1.0.1";g.registerCoordinateSystem("bingmap",r),g.registerAction({type:"bingmapRoam",event:"bingmapRoam",update:"updateLayout"},function(t,n){n.eachComponent("bingmap",function(e){const i=e.getBingMap(),o=i.getCenter();e.setCenterAndZoom([o.longitude,o.latitude],i.getZoom())})}),l.name=M,l.version=C,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
